compressed_ret <- as.matrix(just_returns) %*% e_R[,1:24]
compressed_ret <- data.frame(cbind(compressed_ret, returns$crisis))
names(compressed_ret)[ncol(compressed_ret)] <- c('crisis')
head(compressed_ret)
qda.fit <- qda(crisis ~ ., data = compressed_ret)
qda.fit
qda_conf <- t(table(predict(qda.fit,type="class")$class, returns$crisis))
names(dimnames(qda_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda_conf)
print("APER:")
print((sum(qda_conf)-tr(qda_conf))/sum(qda_conf))
just_returns <- subset(returns, select=-c(Time, crisis))
compressed_ret_3 <- as.matrix(just_returns) %*% e_R[,1:3]
compressed_ret_3 <- data.frame(cbind(compressed_ret_3, returns$crisis))
names(compressed_ret_3)[ncol(compressed_ret_3)] <- c('crisis')
compressed_ret_6 <- as.matrix(just_returns) %*% e_R[,1:3]
compressed_ret_6 <- data.frame(cbind(compressed_ret_6, returns$crisis))
names(compressed_ret_6)[ncol(compressed_ret_6)] <- c('crisis')
compressed_ret_12 <- as.matrix(just_returns) %*% e_R[,1:3]
compressed_ret_12 <- data.frame(cbind(compressed_ret_12, returns$crisis))
names(compressed_ret_12)[ncol(compressed_ret_12)] <- c('crisis')
compressed_ret_24 <- as.matrix(just_returns) %*% e_R[,1:24]
compressed_ret_24 <- data.frame(cbind(compressed_ret_24, returns$crisis))
names(compressed_ret_24)[ncol(compressed_ret_24)] <- c('crisis')
head(compressed_ret_3)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
# print("APER:")
# print((sum(qda_conf)-tr(qda_conf))/sum(qda_conf))
just_returns <- subset(returns, select=-c(Time, crisis))
compressed_ret_3 <- as.matrix(just_returns) %*% e_R[,1:3]
compressed_ret_3 <- data.frame(cbind(compressed_ret_3, returns$crisis))
names(compressed_ret_3)[ncol(compressed_ret_3)] <- c('crisis')
compressed_ret_6 <- as.matrix(just_returns) %*% e_R[,1:6]
compressed_ret_6 <- data.frame(cbind(compressed_ret_6, returns$crisis))
names(compressed_ret_6)[ncol(compressed_ret_6)] <- c('crisis')
compressed_ret_12 <- as.matrix(just_returns) %*% e_R[,1:12]
compressed_ret_12 <- data.frame(cbind(compressed_ret_12, returns$crisis))
names(compressed_ret_12)[ncol(compressed_ret_12)] <- c('crisis')
compressed_ret_24 <- as.matrix(just_returns) %*% e_R[,1:24]
compressed_ret_24 <- data.frame(cbind(compressed_ret_24, returns$crisis))
names(compressed_ret_24)[ncol(compressed_ret_24)] <- c('crisis')
head(compressed_ret_3)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
# print("APER:")
# print((sum(qda_conf)-tr(qda_conf))/sum(qda_conf))
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- plot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.47) # shrinks axis labels
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.47) # shrinks axis labels
legend
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
legend
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
grid(nx=NA, ny=NULL)
barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
grid(nx=NA, ny=NULL)
barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
grid(nx=NA, ny=NULL)
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components") # assign result to named object
grid(nx=NA, ny=NULL)
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
grid(nx=NA, ny=NULL)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
print(apers)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
print(apers)
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price), color = "brown4") +
geom_line(aes(y = w2_price), color="darkolivegreen4") +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time") +
theme(legend.position = "topright")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "brown4") ) +
geom_line(aes(y = w2_price, color="darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time") +
theme(legend.position = "topright")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "brown4") ) +
geom_line(aes(y = w2_price, color="darkolivegreen4")) +
scale_color_manual(name = "Prices", values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time") +
theme(legend.position = "topright")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time") +
theme(legend.position = "topright")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
print("w1:")
print(w1)
print("w2:")
print(w2)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
