chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price), color = "brown4") +
geom_line(aes(y = w2_price), color="darkolivegreen4") +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
main("Vrijednost prva dva svojstvena portfelja kroz vrijeme")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price), color = "brown4") +
geom_line(aes(y = w2_price), color="darkolivegreen4") +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price), color = "brown4") +
geom_line(aes(y = w2_price), color="darkolivegreen4") +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", ylab="Vrijednost ($)")
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price), color = "brown4") +
geom_line(aes(y = w2_price), color="darkolivegreen4") +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
L = sqrt(lambda_R[1])*e_R[,1]
L
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L
print("hej")
typeof(L)
as.data.frame(L)
df <- as.data.frame(L)
rownames(df) <- colnames(ETF_returns[,2:p])
df
colnames(df) <- c('F1', 'F2')
df
residual
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
residual
x <- LETTERS[1:20]
y <- paste0("var", seq(1,20))
data <- expand.grid(X=x, Y=y)
data
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
install.packages('hrbrthemes')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(residual)
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
print(residual)
print(L)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(residual)
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2()+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
fa = factanal(factors = 3, covmat = R,rotation="none")
fa$loadings
rowSums(fa$loadings^2)
fa$uniqueness
rowSums(fa$loadings^2)
fa$uniqueness
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
round(residual,digits = 3)
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
round(residual,digits = 3)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
round(residual,digits = 3)
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
round(residual,digits = 3)
fa = factanal(factors = 3, covmat = R,rotation="none")
fa$loadings
rowSums(fa$loadings^2)
fa$uniqueness
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
round(residual,digits = 3)
fa = factanal(factors = 2, covmat = R,rotation="varimax")
fa = factanal(factors = 3, covmat = R,rotation="varimax")
print(fa$loadings)
fa2 = factanal(factors = 2, covmat = R,rotation="none")
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.01)
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="none")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.75, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="none")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.45, cex.names = 0.75, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="none")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="none")
barplot(rbind(fa2$uniqueness,fa3$uniqueness, df_psi$psi), beside=TRUE, col=c("cornflowerblue", "bisque", "red"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque", "red"),
cex = 0.65)
print(fa2$loadings)
print(fa3$loadings)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness, df_psi$psi), beside=TRUE, col=c("cornflowerblue", "bisque", "red"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque", "red"),
cex = 0.65)
print(fa2$loadings)
print(fa3$loadings)
fa2 = factanal(factors = 2, covmat = R,rotation="none", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="none")
barplot(rbind(fa2$uniqueness,fa3$uniqueness, df_psi$psi), beside=TRUE, col=c("cornflowerblue", "bisque", "red"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque", "red"),
cex = 0.65)
print(fa2$loadings)
print(fa3$loadings)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness, df_psi$psi), beside=TRUE, col=c("cornflowerblue", "bisque", "red"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque", "red"),
cex = 0.65)
