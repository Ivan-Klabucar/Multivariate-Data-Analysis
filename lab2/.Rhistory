theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
print("w1:")
print(w1)
print("w2:")
print(w2)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
install.packages('hrbrthemes')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
library(yardstick)
install.packages('yardstick')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
library(yardstick)
ETF.prices = read.csv(file = 'ETFprices.csv')
ETF.prices$Time = as.Date(ETF.prices$Time, "%d-%b-%Y")
summary(ETF.prices)
head(ETF.prices)
ETF.prices = read.csv(file = 'ETFprices.csv')
ETF.prices$Time = as.Date(ETF.prices$Time, "%d-%b-%Y")
summary(ETF.prices)
head(ETF.prices)
n = nrow(ETF.prices)
p = ncol(ETF.prices)
ETF_returns = ((data.matrix(ETF.prices[2:n,2:p]) - data.matrix(ETF.prices[1:(n-1),2:p]))/data.matrix(ETF.prices[1:(n-1),2:p]))
ETF_returns = cbind(ETF.prices$Time[2:n],as.data.frame(ETF_returns))
names(ETF_returns)[1] <- "Time"
head(ETF_returns)
R = cor(ETF_returns[,2:p])
ggcorr(ETF_returns,label = TRUE, label_size=3, cex=3)
ev_R = eigen(R)
lambda_R = ev_R$values
e_R = ev_R$vectors
lambda_R
sum(lambda_R)
tr(R)
sum(lambda_R[1:3])/sum(lambda_R)
sum(lambda_R[1:4])/sum(lambda_R)
#scree plot za glavne komponente kovarijance
plot(lambda_R, type = "b", cex.lab=0.75, cex.main=0.75, cex.axis=0.75, xlab="i", ylab=expression(lambda["i"]), main='Scree plot svojstvenih vrijednosti korelacijske matrice')
grid()
midpts <- barplot(e_R[,1], col="#69b3a2", main="1. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,2], col="#69b3a2", main="2. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,3], col="#69b3a2", main="3. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,4], col="#69b3a2", main="4. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
Y = R%*%e_R
plot(Y[,1],Y[,2], pch = 20, main="graf raspršenja fondova po prve dvije glavne komponente", cex=0.7, cex.lab=0.5, cex.axis=0.5, xlab=expression("Prva komponenta"), ylab=expression("Druga komponenta"), xlim=c(-1.8,3.9), ylim=c(-2,0.2))
grid()
#moguce je dodati i tekst - pritom treba pripaziti na citljivost
text(Y[,1]+0.06,Y[,2]-0.04, colnames(ETF_returns[,2:p]),cex=0.4)
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
print("w1:")
print(w1)
print("w2:")
print(w2)
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
print("w1:")
print(w1)
print("w2:")
print(w2)
midpts <- barplot(w1, col="#69b3a2", main="1. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(w2, col="#69b3a2", main="2. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
midpts <- barplot(w1, col="#69b3a2", main="1. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(w2, col="#69b3a2", main="2. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
round(residual,digits = 3)
fa = factanal(factors = 3, covmat = R, rotation="none")
fa$loadings
rowSums(fa$loadings^2)
fa$uniqueness
rowSums(fa$loadings^2)
fa$uniqueness
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
round(residual,digits = 3)
fa = factanal(factors = 3, covmat = R,rotation="varimax")
print(fa$loadings)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("reshape2")
library(GGally)
library(psych)
library(data.table)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
library(hrbrthemes)
library(yardstick)
ETF.prices = read.csv(file = 'ETFprices.csv')
ETF.prices$Time = as.Date(ETF.prices$Time, "%d-%b-%Y")
summary(ETF.prices)
head(ETF.prices)
n = nrow(ETF.prices)
p = ncol(ETF.prices)
ETF_returns = ((data.matrix(ETF.prices[2:n,2:p]) - data.matrix(ETF.prices[1:(n-1),2:p]))/data.matrix(ETF.prices[1:(n-1),2:p]))
ETF_returns = cbind(ETF.prices$Time[2:n],as.data.frame(ETF_returns))
names(ETF_returns)[1] <- "Time"
head(ETF_returns)
R = cor(ETF_returns[,2:p])
ggcorr(ETF_returns,label = TRUE, label_size=3, cex=3)
ev_R = eigen(R)
lambda_R = ev_R$values
e_R = ev_R$vectors
lambda_R
sum(lambda_R)
tr(R)
sum(lambda_R[1:3])/sum(lambda_R)
sum(lambda_R[1:4])/sum(lambda_R)
#scree plot za glavne komponente kovarijance
plot(lambda_R, type = "b", cex.lab=0.75, cex.main=0.75, cex.axis=0.75, xlab="i", ylab=expression(lambda["i"]), main='Scree plot svojstvenih vrijednosti korelacijske matrice')
grid()
midpts <- barplot(e_R[,1], col="#69b3a2", main="1. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,2], col="#69b3a2", main="2. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,3], col="#69b3a2", main="3. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(e_R[,4], col="#69b3a2", main="4. svojstveni vektor korelacijske matrice") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
Y = R%*%e_R
plot(Y[,1],Y[,2], pch = 20, main="graf raspršenja fondova po prve dvije glavne komponente", cex=0.7, cex.lab=0.5, cex.axis=0.5, xlab=expression("Prva komponenta"), ylab=expression("Druga komponenta"), xlim=c(-1.8,3.9), ylim=c(-2,0.2))
grid()
#moguce je dodati i tekst - pritom treba pripaziti na citljivost
text(Y[,1]+0.06,Y[,2]-0.04, colnames(ETF_returns[,2:p]),cex=0.4)
normalize <- function(x) {x / sqrt(sum(x^2))}
w1 = normalize(e_R[,1]*sign(sum(e_R[,1])))
w2 = normalize(e_R[,2]*sign(sum(e_R[,2])))
w1_returns = as.matrix(ETF_returns[,2:p]) %*% w1
w2_returns = as.matrix(ETF_returns[,2:p]) %*% w2
w1_price = Reduce(function(x,r) {x * (1+r)}, w1_returns, init=100, accumulate=T)
w2_price = Reduce(function(x,r) {x * (1+r)}, w2_returns, init=100, accumulate=T)
chron_prices = data.frame(date = ETF.prices$Time, w1_price = w1_price, w2_price = w2_price)
theme_set(theme_minimal())
ggplot(chron_prices, aes(x=date)) +
geom_line(aes(y = w1_price, color = "w1") ) +
geom_line(aes(y = w2_price, color="w2")) +
scale_color_manual(name = "Colors",
values = c("w1" = "brown4", "w2" = "darkolivegreen4")) +
scale_x_date(date_breaks = "1 year", date_labels ="%Y") +
labs(title="Vrijednost prva dva svojstvena portfelja kroz vrijeme", y="Vrijednost ($)", x="time")
midpts <- barplot(w1, col="#69b3a2", main="1. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
midpts <- barplot(w2, col="#69b3a2", main="2. svojstveni portfelj") # assign result to named object
axis(1, at = midpts, labels=colnames(ETF_returns[,2:p]), cex.axis=0.47) # shrinks axis labels
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
round(residual,digits = 3)
fa = factanal(factors = 3, covmat = R, rotation="none")
fa$loadings
rowSums(fa$loadings^2)
fa$uniqueness
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
round(residual,digits = 3)
fa = factanal(factors = 3, covmat = R,rotation="varimax")
print(fa$loadings)
fa = factanal(factors = 3, covmat = R,rotation="varimax")
print(fa$loadings)
print(fa$uniquenesses)
sum(residual)
sum(residual^2)
residual^2
residual
2.064716e-03 * 2.064716e-03
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
print('Sum of squares of residual matrix:')
sum(residual)
L = sqrt(lambda_R[1])*e_R[,1]
L = cbind(L,sqrt(lambda_R[2])*e_R[,2])
L = cbind(L,sqrt(lambda_R[3])*e_R[,3])
h = rowSums(L^2)
psi = 1-h
residual = R - L%*%t(L) - diag(psi)
df_factors <- as.data.frame(L)
rownames(df_factors) <- colnames(ETF_returns[,2:p])
colnames(df_factors) <- c('F1', 'F2', 'F3')
df_h <- as.data.frame(h)
rownames(df_h) <- colnames(ETF_returns[,2:p])
colnames(df_h) <- c('communality')
df_psi <- as.data.frame(psi)
rownames(df_psi) <- colnames(ETF_returns[,2:p])
colnames(df_psi) <- c('psi')
print(df_factors)
print(df_h)
print(df_psi)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
which(residual < -0.2, arr.ind = TRUE)
which(residual > 0.2, arr.ind = TRUE)
print('Sum of squares of residual matrix:')
sum(residual^2)
fa = factanal(factors = 3, covmat = R, rotation="none")
fa$loadings
rowSums(fa$loadings^2)
fa$uniqueness
residual = R - fa$loadings%*%t(fa$loadings) - diag(fa$uniquenesses)
ggplot(data = melt(residual), aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="coral")+
#scale_fill_gradient(low="white", high="blue") +
theme_ipsum() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title="Rezidual korelacijske matrice")
print('Sum of squares of residual matrix:')
sum(residual^2)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora", "PCA"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
fa2 = factanal(factors = 2, covmat = R,rotation="varimax", lower = 0.1)
fa3 = factanal(factors = 3, covmat = R,rotation="varimax")
barplot(rbind(fa2$uniqueness,fa3$uniqueness), beside=TRUE, col=c("cornflowerblue", "bisque"), main="Specifične varijance",ylab="Var", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("topright",
legend = c("2 Faktora","3 Faktora"),
fill = c("cornflowerblue", "bisque"),
cex = 0.65)
print(fa2$loadings)
print(fa3$loadings)
lda.fit <- lda(crisis ~ . - Time, data = returns)
ETF.crisis = read.csv("crisis.csv")
ETF.crisis$Time = as.Date(ETF.crisis$Time, "%d.%m.%Y")
ETF.crisis <- ETF.crisis[-1,]
dim(ETF.crisis)
dim(ETF_returns)
head(ETF.crisis)
crisis <- ETF.crisis[,'Crisis']
returns <- cbind(ETF_returns, crisis)
head(returns)
lda.fit <- lda(crisis ~ . - Time, data = returns)
lda.fit
barplot(lda.fit$means, beside=TRUE, col=c("cornflowerblue", "coral"), main="Vektori srednjih vrijednosti dvaju populacija", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("bottomleft",
legend = c("bez krize","kriza"),
fill = c("cornflowerblue", "coral"),
cex = 0.65)
no_crisis_returns <- subset(returns[returns$crisis == 0,], select=-c(Time, crisis))
crisis_returns    <- subset(returns[returns$crisis == 1,], select=-c(Time, crisis))
cor_by_crisis_data <- rbind(cor(no_crisis_returns)["AGG", ], cor(crisis_returns)["AGG", ])
barplot(cor_by_crisis_data, beside=TRUE, col=c("cornflowerblue", "coral"), main="Korelacije fonda AGG", cex.axis = 0.75, cex.names = 0.45, cex.main=0.85, cex.lab=0.75)
legend("bottomleft",
legend = c("bez krize","kriza"),
fill = c("cornflowerblue", "coral"),
cex = 0.65)
lda.fit <- lda(crisis ~ . - Time, data = returns)
lda.fit
lda_conf <- t(table(predict(lda.fit,type="class")$class, returns$crisis))
names(dimnames(lda_conf)) <- c('TRUE', 'PREDICTED')
print("Confusion matrix")
print(lda_conf)
print("APER:")
print((sum(lda_conf)-tr(lda_conf))/sum(lda_conf))
qda.fit <- qda(crisis ~ . - Time, data = returns)
qda.fit
qda_conf <- t(table(predict(qda.fit,type="class")$class, returns$crisis))
names(dimnames(qda_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda_conf)
print("APER:")
print((sum(qda_conf)-tr(qda_conf))/sum(qda_conf))
just_returns <- subset(returns, select=-c(Time, crisis))
compressed_ret_3 <- as.matrix(just_returns) %*% e_R[,1:3]
compressed_ret_3 <- data.frame(cbind(compressed_ret_3, returns$crisis))
names(compressed_ret_3)[ncol(compressed_ret_3)] <- c('crisis')
compressed_ret_6 <- as.matrix(just_returns) %*% e_R[,1:6]
compressed_ret_6 <- data.frame(cbind(compressed_ret_6, returns$crisis))
names(compressed_ret_6)[ncol(compressed_ret_6)] <- c('crisis')
compressed_ret_12 <- as.matrix(just_returns) %*% e_R[,1:12]
compressed_ret_12 <- data.frame(cbind(compressed_ret_12, returns$crisis))
names(compressed_ret_12)[ncol(compressed_ret_12)] <- c('crisis')
compressed_ret_24 <- as.matrix(just_returns) %*% e_R[,1:24]
compressed_ret_24 <- data.frame(cbind(compressed_ret_24, returns$crisis))
names(compressed_ret_24)[ncol(compressed_ret_24)] <- c('crisis')
head(compressed_ret_3)
qda3.fit <- qda(crisis ~ ., data = compressed_ret_3)
qda3.fit
qda3_conf <- t(table(predict(qda3.fit,type="class")$class, returns$crisis))
names(dimnames(qda3_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda3_conf)
qda6.fit <- qda(crisis ~ ., data = compressed_ret_6)
qda6.fit
qda6_conf <- t(table(predict(qda6.fit,type="class")$class, returns$crisis))
names(dimnames(qda6_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda6_conf)
qda12.fit <- qda(crisis ~ ., data = compressed_ret_12)
qda12.fit
qda12_conf <- t(table(predict(qda12.fit,type="class")$class, returns$crisis))
names(dimnames(qda12_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda12_conf)
qda24.fit <- qda(crisis ~ ., data = compressed_ret_24)
qda24.fit
qda24_conf <- t(table(predict(qda24.fit,type="class")$class, returns$crisis))
names(dimnames(qda24_conf)) <- c('TRUE', 'PREDICTED')
print('Confusion Matrix:')
print(qda24_conf)
apers <- c((sum(qda3_conf)-tr(qda3_conf))/sum(qda3_conf), (sum(qda6_conf)-tr(qda6_conf))/sum(qda6_conf), (sum(qda12_conf)-tr(qda12_conf))/sum(qda12_conf), (sum(qda24_conf)-tr(qda24_conf))/sum(qda24_conf))
midpts <- barplot(apers, col="#69b3a2", main="APER metric of qda models", xlab="Number of PCA components")
axis(1, at = midpts, labels=c('3', '6', '12', '24'), cex.axis=0.9) # shrinks axis labels
grid(nx=NA, ny=NULL)
print(apers)
