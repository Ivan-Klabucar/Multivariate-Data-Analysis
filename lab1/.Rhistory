knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(GGally)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
grades <- read.csv('studenti.csv')
summary(grades)
grades[ , colnames(grades)] <- apply(grades[ , colnames(grades)], 2, # Specify own function within apply
function(x) as.numeric(as.character(x)))
head(grades)
sapply(grades, class)
summary(grades)
dim(grades)
grades[grades$MI_2 > 8 | grades$ZI_1 < 0,]
grades <- grades[!(grades$MI_2 > 8 | grades$ZI_1 < 0),]
grades[is.na(grades$MI_5) | is.na(grades$ZI_5), ]
mi_or_zi <- colnames(grades)[colnames(grades) %like% '[M|Z]I']
grades <- grades[!rowSums(is.na(grades[, mi_or_zi])) > 0,]
dim(grades)
missing_ir <- grades[rowSums(is.na(grades[,colnames(grades)[colnames(grades) %like% 'IR']])) > 0, ]
dim(missing_ir)
has_both_labs <- grades[!rowSums(is.na(grades[, c('LAB_1', 'LAB_2')])) > 0, ] # Izbacimo sve studente koji nisu bili na svim labosa
dim(has_both_labs) # Izbacili smo 3 studenta
Mi_or_Zi_or_Lab <- colnames(grades)[colnames(grades) %like% '[M|Z]I|LAB']
kont_pass <- has_both_labs[rowSums(has_both_labs[, Mi_or_Zi_or_Lab]) > 50, ]
dim(kont_pass)
cols_except_IR <- colnames(grades)[!colnames(grades) %like% 'IR']
kont_pass <- kont_pass[, cols_except_IR]
corr_matrix <- cor(kont_pass)
corr_matrix
which(corr_matrix > 0.3 & corr_matrix != 1, arr.ind = TRUE)
corr_matrix[which(corr_matrix > 0.3 & corr_matrix != 1, arr.ind = TRUE)]
which(corr_matrix < -0.15, arr.ind = TRUE)
corr_matrix[which(corr_matrix < -0.15, arr.ind = TRUE)]
just_MI <- colnames(grades)[colnames(grades) %like% 'MI']
just_ZI <- colnames(grades)[colnames(grades) %like% 'ZI']
kont_pass$MI_TOTAL <- rowSums(kont_pass[, just_MI])
kont_pass$ZI_TOTAL <- rowSums(kont_pass[, just_ZI])
kont_pass_reduced <- kont_pass[, c('MI_TOTAL', 'ZI_TOTAL', 'LAB_1', 'LAB_2')]
cor(kont_pass_reduced)
has_both_labs <- grades[!rowSums(is.na(grades[, c('LAB_1', 'LAB_2')])) > 0, ] # Izbacimo sve studente koji nisu bili na svim labosa
dim(has_both_labs) # Izbacili smo 3 studenta
just_IR <- colnames(grades)[colnames(grades) %like% 'IR']
both_labs_and_IR <- has_both_labs[!(rowSums(is.na(has_both_labs[, just_IR])) > 0), ]
IR_pass <- both_labs_and_IR[rowSums(both_labs_and_IR[, just_IR]) > 50, ]
dim(IR_pass)
corr_matrix_IR <- cor(IR_pass)
corr_matrix_IR
which(corr_matrix_IR > 0.4 & corr_matrix_IR != 1, arr.ind = TRUE)
corr_matrix_IR[which(corr_matrix_IR > 0.4 & corr_matrix_IR != 1, arr.ind = TRUE)]
which(corr_matrix_IR < -0.3, arr.ind = TRUE)
corr_matrix_IR[which(corr_matrix_IR < -0.3, arr.ind = TRUE)]
just_MI <- colnames(grades)[colnames(grades) %like% 'MI']
just_ZI <- colnames(grades)[colnames(grades) %like% 'ZI']
IR_pass$MI_TOTAL <- rowSums(IR_pass[, just_MI])
IR_pass$ZI_TOTAL <- rowSums(IR_pass[, just_ZI])
IR_pass$IR_TOTAL <- rowSums(IR_pass[, just_IR])
kont_pass_reduced <- IR_pass[, c('MI_TOTAL', 'ZI_TOTAL', 'IR_TOTAL', 'LAB_1', 'LAB_2')]
cor(kont_pass_reduced)
IR_data <- grades[!(rowSums(is.na(grades[, just_IR])) > 0), ]
IR_data <- IR_data[, just_IR]
ggpairs(IR_data, diag = list(continuous = "barDiag"))+theme_bw()+ geom_histogram(aes(y = ..density..))
colMeans(IR_data)
cov(IR_data)
stat_dist <- mahalanobis(IR_data, colMeans(IR_data), cov(IR_data))
boxplot(stat_dist, main="Mahalanobis distances of IR_data", ylab="Mahalanobis")
hist(stat_dist)
IR_data[stat_dist > 20,]
stat_dist[stat_dist > 20]
grades_no_na <- grades[!(rowSums(is.na(grades[ ,Mi_or_Zi_or_Lab])) > 0), ]
grades_no_na$KONT_TOTAL <- rowSums(grades_no_na[, Mi_or_Zi_or_Lab])
boxplot(KONT_TOTAL~Grupa, grades_no_na, main="Ukupni brojevi bodova kontinuirane nastave", col="azure")
means <- tapply(grades_no_na$KONT_TOTAL,grades_no_na$Grupa,mean)
points(means,col="coral1",pch=16)
grades_no_na %>%
group_by(Grupa)%>%
summarise(mean = mean(KONT_TOTAL), median=median(KONT_TOTAL), std=sd(KONT_TOTAL))
grades_no_na_IR <- grades[!(rowSums(is.na(grades[ ,just_IR])) > 0), ]
grades_no_na_IR$IR_TOTAL <- rowSums(grades_no_na_IR[, just_IR])
boxplot(IR_TOTAL~Grupa, grades_no_na_IR, main="Ukupni brojevi bodova na ispitnom roku", col="azure")
means <- tapply(grades_no_na_IR$IR_TOTAL,grades_no_na_IR$Grupa,mean)
points(means,col="coral1",pch=16)
grades_no_na_IR %>%
group_by(Grupa)%>%
summarise(mean = mean(IR_TOTAL), median=median(IR_TOTAL), std=sd(IR_TOTAL))
MI_and_ZI <- colnames(grades)[colnames(grades) %like% 'M|ZI']
grades_MI_ZI <- grades[!(rowSums(is.na(grades[ ,MI_and_ZI])) > 0), ]
grades_MI_ZI$MI_TOTAL <- rowSums(grades_MI_ZI[, just_MI])
grades_MI_ZI$ZI_TOTAL <- rowSums(grades_MI_ZI[, just_ZI])
plot(grades_MI_ZI$MI_TOTAL, grades_MI_ZI$ZI_TOTAL, main='Bodovi na MI i ZI', xlab='MI', ylab='ZI', col='darkblue')
cor(grades_MI_ZI$MI_TOTAL, grades_MI_ZI$ZI_TOTAL)
x <- na.omit(grades[, c('LAB_1', 'MI_1')])
x_cor = round(cor(x$LAB_1, x$MI_1), 3)
ggplot(x, aes(x=LAB_1, y=MI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_1 i MI_1, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, c('LAB_2', 'ZI_1')])
x_cor = round(cor(x$LAB_2, x$ZI_1), 3)
ggplot(x, aes(x=LAB_2, y=ZI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_2 i ZI_1, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, c('LAB_1', 'ZI_1', just_IR)])
x_cor = round(cor(x$LAB_1, x$ZI_1), 3)
ggplot(x, aes(x=LAB_1, y=ZI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_1 i ZI_1 među studentima koji su izašli na IR, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, Mi_or_Zi_or_Lab])
x$TOTAL <- rowSums(x[, Mi_or_Zi_or_Lab])
hist(x$TOTAL, col="azure")
qqnorm(x$TOTAL, pch = 1, frame = FALSE)
qqline(x$TOTAL, col = "steelblue", lwd = 2)
skewness(x$TOTAL)
kurtosis(x$TOTAL)
shapiro.test(x$TOTAL)
ad.test(x$TOTAL)
x <- na.omit(grades[, c('LAB_1', 'LAB_2')])
ggplot(x, aes(x=x$LAB_1, y=x$LAB_2))+
geom_point(alpha = .2) +
geom_density_2d()+
theme_bw()
cov(x)
mvnorm.etest(x, R=200)
dens <- kde2d(x$LAB_1, x$LAB_2)
fig <- plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
fig
all_except_Grupa <- colnames(grades)[!(colnames(grades) %like% 'G')]
x <- na.omit(grades[, all_except_Grupa])
mlm.fit <- lm(cbind(IR_1, IR_2, IR_3, IR_4, IR_5) ~ ., data = x)
summary(mlm.fit)
Anova(mlm.fit)
mlm2.fit <- lm(cbind(IR_1, IR_2, IR_3, IR_4, IR_5) ~ . - ZI_3 - ZI_4, data = x)
anova(mlm.fit, mlm2.fit)
lh.out <- linearHypothesis(mlm.fit, hypothesis.matrix = c("ZI_3 = 0", "ZI_4 = 0"))
lh.out
Anova(mlm2.fit)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(GGally)
library(dplyr)
library("lattice")
library(moments)
library(nortest)
library(energy)
library(plotly)
library(car)
library('MASS')
grades <- read.csv('studenti.csv')
summary(grades)
grades[ , colnames(grades)] <- apply(grades[ , colnames(grades)], 2, # Specify own function within apply
function(x) as.numeric(as.character(x)))
head(grades)
sapply(grades, class)
summary(grades)
dim(grades)
grades[grades$MI_2 > 8 | grades$ZI_1 < 0,]
grades <- grades[!(grades$MI_2 > 8 | grades$ZI_1 < 0),]
grades[is.na(grades$MI_5) | is.na(grades$ZI_5), ]
mi_or_zi <- colnames(grades)[colnames(grades) %like% '[M|Z]I']
grades <- grades[!rowSums(is.na(grades[, mi_or_zi])) > 0,]
dim(grades)
missing_ir <- grades[rowSums(is.na(grades[,colnames(grades)[colnames(grades) %like% 'IR']])) > 0, ]
dim(missing_ir)
has_both_labs <- grades[!rowSums(is.na(grades[, c('LAB_1', 'LAB_2')])) > 0, ] # Izbacimo sve studente koji nisu bili na svim labosa
dim(has_both_labs) # Izbacili smo 3 studenta
Mi_or_Zi_or_Lab <- colnames(grades)[colnames(grades) %like% '[M|Z]I|LAB']
kont_pass <- has_both_labs[rowSums(has_both_labs[, Mi_or_Zi_or_Lab]) > 50, ]
dim(kont_pass)
cols_except_IR <- colnames(grades)[!colnames(grades) %like% 'IR']
kont_pass <- kont_pass[, cols_except_IR]
corr_matrix <- cor(kont_pass)
corr_matrix
which(corr_matrix > 0.3 & corr_matrix != 1, arr.ind = TRUE)
corr_matrix[which(corr_matrix > 0.3 & corr_matrix != 1, arr.ind = TRUE)]
which(corr_matrix < -0.15, arr.ind = TRUE)
corr_matrix[which(corr_matrix < -0.15, arr.ind = TRUE)]
just_MI <- colnames(grades)[colnames(grades) %like% 'MI']
just_ZI <- colnames(grades)[colnames(grades) %like% 'ZI']
kont_pass$MI_TOTAL <- rowSums(kont_pass[, just_MI])
kont_pass$ZI_TOTAL <- rowSums(kont_pass[, just_ZI])
kont_pass_reduced <- kont_pass[, c('MI_TOTAL', 'ZI_TOTAL', 'LAB_1', 'LAB_2')]
cor(kont_pass_reduced)
has_both_labs <- grades[!rowSums(is.na(grades[, c('LAB_1', 'LAB_2')])) > 0, ] # Izbacimo sve studente koji nisu bili na svim labosa
dim(has_both_labs) # Izbacili smo 3 studenta
just_IR <- colnames(grades)[colnames(grades) %like% 'IR']
both_labs_and_IR <- has_both_labs[!(rowSums(is.na(has_both_labs[, just_IR])) > 0), ]
IR_pass <- both_labs_and_IR[rowSums(both_labs_and_IR[, just_IR]) > 50, ]
dim(IR_pass)
corr_matrix_IR <- cor(IR_pass)
corr_matrix_IR
which(corr_matrix_IR > 0.4 & corr_matrix_IR != 1, arr.ind = TRUE)
corr_matrix_IR[which(corr_matrix_IR > 0.4 & corr_matrix_IR != 1, arr.ind = TRUE)]
which(corr_matrix_IR < -0.3, arr.ind = TRUE)
corr_matrix_IR[which(corr_matrix_IR < -0.3, arr.ind = TRUE)]
just_MI <- colnames(grades)[colnames(grades) %like% 'MI']
just_ZI <- colnames(grades)[colnames(grades) %like% 'ZI']
IR_pass$MI_TOTAL <- rowSums(IR_pass[, just_MI])
IR_pass$ZI_TOTAL <- rowSums(IR_pass[, just_ZI])
IR_pass$IR_TOTAL <- rowSums(IR_pass[, just_IR])
kont_pass_reduced <- IR_pass[, c('MI_TOTAL', 'ZI_TOTAL', 'IR_TOTAL', 'LAB_1', 'LAB_2')]
cor(kont_pass_reduced)
IR_data <- grades[!(rowSums(is.na(grades[, just_IR])) > 0), ]
IR_data <- IR_data[, just_IR]
ggpairs(IR_data, diag = list(continuous = "barDiag"))+theme_bw()+ geom_histogram(aes(y = ..density..))
colMeans(IR_data)
cov(IR_data)
stat_dist <- mahalanobis(IR_data, colMeans(IR_data), cov(IR_data))
boxplot(stat_dist, main="Mahalanobis distances of IR_data", ylab="Mahalanobis")
hist(stat_dist)
IR_data[stat_dist > 20,]
stat_dist[stat_dist > 20]
grades_no_na <- grades[!(rowSums(is.na(grades[ ,Mi_or_Zi_or_Lab])) > 0), ]
grades_no_na$KONT_TOTAL <- rowSums(grades_no_na[, Mi_or_Zi_or_Lab])
boxplot(KONT_TOTAL~Grupa, grades_no_na, main="Ukupni brojevi bodova kontinuirane nastave", col="azure")
means <- tapply(grades_no_na$KONT_TOTAL,grades_no_na$Grupa,mean)
points(means,col="coral1",pch=16)
grades_no_na %>%
group_by(Grupa)%>%
summarise(mean = mean(KONT_TOTAL), median=median(KONT_TOTAL), std=sd(KONT_TOTAL))
grades_no_na_IR <- grades[!(rowSums(is.na(grades[ ,just_IR])) > 0), ]
grades_no_na_IR$IR_TOTAL <- rowSums(grades_no_na_IR[, just_IR])
boxplot(IR_TOTAL~Grupa, grades_no_na_IR, main="Ukupni brojevi bodova na ispitnom roku", col="azure")
means <- tapply(grades_no_na_IR$IR_TOTAL,grades_no_na_IR$Grupa,mean)
points(means,col="coral1",pch=16)
grades_no_na_IR %>%
group_by(Grupa)%>%
summarise(mean = mean(IR_TOTAL), median=median(IR_TOTAL), std=sd(IR_TOTAL))
MI_and_ZI <- colnames(grades)[colnames(grades) %like% 'M|ZI']
grades_MI_ZI <- grades[!(rowSums(is.na(grades[ ,MI_and_ZI])) > 0), ]
grades_MI_ZI$MI_TOTAL <- rowSums(grades_MI_ZI[, just_MI])
grades_MI_ZI$ZI_TOTAL <- rowSums(grades_MI_ZI[, just_ZI])
plot(grades_MI_ZI$MI_TOTAL, grades_MI_ZI$ZI_TOTAL, main='Bodovi na MI i ZI', xlab='MI', ylab='ZI', col='darkblue')
cor(grades_MI_ZI$MI_TOTAL, grades_MI_ZI$ZI_TOTAL)
x <- na.omit(grades[, c('LAB_1', 'MI_1')])
x_cor = round(cor(x$LAB_1, x$MI_1), 3)
ggplot(x, aes(x=LAB_1, y=MI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_1 i MI_1, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, c('LAB_2', 'ZI_1')])
x_cor = round(cor(x$LAB_2, x$ZI_1), 3)
ggplot(x, aes(x=LAB_2, y=ZI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_2 i ZI_1, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, c('LAB_1', 'ZI_1', just_IR)])
x_cor = round(cor(x$LAB_1, x$ZI_1), 3)
ggplot(x, aes(x=LAB_1, y=ZI_1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette= "Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle(glue::glue('Bodovi na LAB_1 i ZI_1 među studentima koji su izašli na IR, cor={x_cor}')) +
theme(plot.title = element_text(hjust = 0.5))
x <- na.omit(grades[, Mi_or_Zi_or_Lab])
x$TOTAL <- rowSums(x[, Mi_or_Zi_or_Lab])
hist(x$TOTAL, col="azure")
qqnorm(x$TOTAL, pch = 1, frame = FALSE)
qqline(x$TOTAL, col = "steelblue", lwd = 2)
skewness(x$TOTAL)
kurtosis(x$TOTAL)
shapiro.test(x$TOTAL)
ad.test(x$TOTAL)
x <- na.omit(grades[, c('LAB_1', 'LAB_2')])
ggplot(x, aes(x=x$LAB_1, y=x$LAB_2))+
geom_point(alpha = .2) +
geom_density_2d()+
theme_bw()
cov(x)
mvnorm.etest(x, R=200)
dens <- kde2d(x$LAB_1, x$LAB_2)
fig <- plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
fig
all_except_Grupa <- colnames(grades)[!(colnames(grades) %like% 'G')]
x <- na.omit(grades[, all_except_Grupa])
mlm.fit <- lm(cbind(IR_1, IR_2, IR_3, IR_4, IR_5) ~ ., data = x)
summary(mlm.fit)
Anova(mlm.fit)
mlm2.fit <- lm(cbind(IR_1, IR_2, IR_3, IR_4, IR_5) ~ . - ZI_3 - ZI_4, data = x)
anova(mlm.fit, mlm2.fit)
lh.out <- linearHypothesis(mlm.fit, hypothesis.matrix = c("ZI_3 = 0", "ZI_4 = 0"))
lh.out
Anova(mlm2.fit)
## Preuzeto iz auditorne vjezbe 4
## define our own "rstandard" method for "mlm" class
rstandard.mlm2 <- function (model) {
Q <- with(model, qr.qy(qr, diag(1, nrow = nrow(qr$qr), ncol = qr$rank)))  ## Q matrix
hii <- rowSums(Q ^ 2)  ## diagonal of hat matrix QQ'
RSS <- colSums(model$residuals ^ 2)  ## residual sums of squares (for each model)
sigma <- sqrt(RSS / model$df.residual)  ##  ## Pearson estimate of residuals (for each model)
pointwise_sd <- outer(sqrt(1 - hii), sigma)  ## point-wise residual standard error (for each model)
model$residuals / pointwise_sd  ## standardised residuals
}
plot(fitted(mlm2.fit), rstandard(mlm2.fit), col = as.numeric(col(fitted(mlm2.fit))), pch = 19)
abline(h=0)
legend("bottomright", legend = paste0("IR ", 1:ncol(fitted(mlm2.fit))), pch = 19,
col = 1:ncol(fitted(mlm2.fit)), text.col = 1:ncol(fitted(mlm2.fit)))
plot(fitted(mlm2.fit)[, 'IR_1'], rstandard(mlm2.fit)[, 'IR_1'], col = 'darkblue', pch = 19)
abline(h=0)
st_r <- rstandard(mlm2.fit)
which(st_r[, c('IR_2', 'IR_3', 'IR_1')] < -3, arr.ind = TRUE)
grades[35,]
grades2 <- grades[-35,]
x2 <- na.omit(grades2[, all_except_Grupa])
mlm_f.fit <- lm(cbind(IR_1, IR_2, IR_3, IR_4, IR_5) ~ . - ZI_3 - ZI_4, data = x2)
summary(mlm_f.fit)
plot(fitted(mlm_f.fit), rstandard(mlm_f.fit), col = as.numeric(col(fitted(mlm_f.fit))), pch = 19)
abline(h=0)
legend("bottomright", legend = paste0("IR ", 1:ncol(fitted(mlm_f.fit))), pch = 19,
col = 1:ncol(fitted(mlm_f.fit)), text.col = 1:ncol(fitted(mlm_f.fit)))
st_r <- rstandard(mlm_f.fit)
for (val in colnames(st_r)) {
qqnorm(st_r[,val], pch = 1, frame = FALSE, main=glue::glue('{val} residuals QQ plot'))
qqline(st_r[,val], col = "steelblue", lwd = 2)
}
just_MI <- colnames(grades)[colnames(grades) %like% 'MI']
just_rel_ZI <- c('ZI_1', 'ZI_2', 'ZI_5')
just_IR <- colnames(grades)[colnames(grades) %like% 'IR']
just_LAB <- colnames(grades)[colnames(grades) %like% 'LAB']
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_MI) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_5'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_5 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_rel_ZI) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_5'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_5 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(2,1), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_LAB) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_5'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_5 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in colnames(fitted(mlm_f.fit))) {
plot(fitted(mlm_f.fit)[, val], rstandard(mlm_f.fit)[, 'IR_5'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_5 residuals by predicted {val}'))
abline(h=0)
}
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_MI) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_1'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_1 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_rel_ZI) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_1'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_1 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(2,1), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in just_LAB) {
plot(x2[, val], rstandard(mlm_f.fit)[, 'IR_1'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_1 residuals by {val}'))
abline(h=0)
}
par(mfrow=c(3,2), mar=c(3.3,3.1,1,0), mgp=c(1.5, 0.5, 0))
for (val in colnames(fitted(mlm_f.fit))) {
plot(fitted(mlm_f.fit)[, val], rstandard(mlm_f.fit)[, 'IR_1'], xlab=val, ylab='Standardized residuals', col = 'darkblue', pch = 19, main=glue::glue('IR_1 residuals by predicted {val}'))
abline(h=0)
}
which(rstandard(mlm_f.fit)[, 'IR_5'] < -1, arr.ind = FALSE)
which(rstandard(mlm_f.fit)[, 'IR_1'] > 1.1, arr.ind=FALSE)
newdata <- data.frame(MI_1=6,  MI_2=7,  MI_3=5,  MI_4=8,  MI_5=8,  LAB_1=9, ZI_1=2,  ZI_2=2,  ZI_3=3,  ZI_4=4,  ZI_5=1,  LAB_2=5)
predict(mlm_f.fit, newdata, interval="confidence")
predict(mlm_f.fit, newdata, interval="predict")
lm_ir5.fit <- lm(IR_5 ~ MI_1 + MI_2 + MI_3 + MI_4 + MI_5 + LAB_1 + ZI_1 + ZI_2 + ZI_3 + ZI_4 + ZI_5 + LAB_2 - ZI_3 - ZI_4, data = x2)
summary(lm_ir5.fit)
predict(lm_ir5.fit, newdata, interval="confidence")
predict(lm_ir5.fit, newdata, interval="predict")
